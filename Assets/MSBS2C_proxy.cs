




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace MSBS2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool OnLoginResult(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, int num, String id, String nick, int rank, int money, int cash, int weapon, int skin, int game, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnLoginResult;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, id);
		Nettention.Proud.Marshaler.Write(__msg, nick);
		Nettention.Proud.Marshaler.Write(__msg, rank);
		Nettention.Proud.Marshaler.Write(__msg, money);
		Nettention.Proud.Marshaler.Write(__msg, cash);
		Nettention.Proud.Marshaler.Write(__msg, weapon);
		Nettention.Proud.Marshaler.Write(__msg, skin);
		Nettention.Proud.Marshaler.Write(__msg, game);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnLoginResult, Common.OnLoginResult);
}

public bool OnLoginResult(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, int num, String id, String nick, int rank, int money, int cash, int weapon, int skin, int game, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnLoginResult;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, id);
Nettention.Proud.Marshaler.Write(__msg, nick);
Nettention.Proud.Marshaler.Write(__msg, rank);
Nettention.Proud.Marshaler.Write(__msg, money);
Nettention.Proud.Marshaler.Write(__msg, cash);
Nettention.Proud.Marshaler.Write(__msg, weapon);
Nettention.Proud.Marshaler.Write(__msg, skin);
Nettention.Proud.Marshaler.Write(__msg, game);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnLoginResult, Common.OnLoginResult);
}
public bool OnRegisterResult(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnRegisterResult;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnRegisterResult, Common.OnRegisterResult);
}

public bool OnRegisterResult(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnRegisterResult;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnRegisterResult, Common.OnRegisterResult);
}
public bool OnStatusResult(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, int num, String id, String nick, int rank, int money, int cash, int weapon, int skin, int game, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnStatusResult;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, id);
		Nettention.Proud.Marshaler.Write(__msg, nick);
		Nettention.Proud.Marshaler.Write(__msg, rank);
		Nettention.Proud.Marshaler.Write(__msg, money);
		Nettention.Proud.Marshaler.Write(__msg, cash);
		Nettention.Proud.Marshaler.Write(__msg, weapon);
		Nettention.Proud.Marshaler.Write(__msg, skin);
		Nettention.Proud.Marshaler.Write(__msg, game);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnStatusResult, Common.OnStatusResult);
}

public bool OnStatusResult(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, int num, String id, String nick, int rank, int money, int cash, int weapon, int skin, int game, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnStatusResult;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, id);
Nettention.Proud.Marshaler.Write(__msg, nick);
Nettention.Proud.Marshaler.Write(__msg, rank);
Nettention.Proud.Marshaler.Write(__msg, money);
Nettention.Proud.Marshaler.Write(__msg, cash);
Nettention.Proud.Marshaler.Write(__msg, weapon);
Nettention.Proud.Marshaler.Write(__msg, skin);
Nettention.Proud.Marshaler.Write(__msg, game);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnStatusResult, Common.OnStatusResult);
}
public bool OnSoloMatched(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, int room, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnSoloMatched;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, room);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnSoloMatched, Common.OnSoloMatched);
}

public bool OnSoloMatched(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, int room, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnSoloMatched;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, room);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnSoloMatched, Common.OnSoloMatched);
}
public bool OnTeamMatched(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, int room, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnTeamMatched;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, room);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnTeamMatched, Common.OnTeamMatched);
}

public bool OnTeamMatched(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, int room, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnTeamMatched;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, room);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnTeamMatched, Common.OnTeamMatched);
}
public bool OnGameInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result, int room, int mode, String users)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameInfo;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, result);
		Nettention.Proud.Marshaler.Write(__msg, room);
		Nettention.Proud.Marshaler.Write(__msg, mode);
		Nettention.Proud.Marshaler.Write(__msg, users);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameInfo, Common.OnGameInfo);
}

public bool OnGameInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result, int room, int mode, String users)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameInfo;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, result);
Nettention.Proud.Marshaler.Write(__msg, room);
Nettention.Proud.Marshaler.Write(__msg, mode);
Nettention.Proud.Marshaler.Write(__msg, users);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameInfo, Common.OnGameInfo);
}
public bool OnGameStatusCountdown(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameStatusCountdown;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, count);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameStatusCountdown, Common.OnGameStatusCountdown);
}

public bool OnGameStatusCountdown(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameStatusCountdown;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, count);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameStatusCountdown, Common.OnGameStatusCountdown);
}
public bool OnGameStatusTime(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameStatusTime;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, time);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameStatusTime, Common.OnGameStatusTime);
}

public bool OnGameStatusTime(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameStatusTime;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, time);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameStatusTime, Common.OnGameStatusTime);
}
public bool OnGameStatusReady(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameStatusReady;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, data);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameStatusReady, Common.OnGameStatusReady);
}

public bool OnGameStatusReady(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameStatusReady;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, data);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameStatusReady, Common.OnGameStatusReady);
}
public bool OnGameStatusScore(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int blueKill, int blueDeath, int bluePoint, int redKill, int redDeath, int redPoint)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameStatusScore;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, blueKill);
		Nettention.Proud.Marshaler.Write(__msg, blueDeath);
		Nettention.Proud.Marshaler.Write(__msg, bluePoint);
		Nettention.Proud.Marshaler.Write(__msg, redKill);
		Nettention.Proud.Marshaler.Write(__msg, redDeath);
		Nettention.Proud.Marshaler.Write(__msg, redPoint);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameStatusScore, Common.OnGameStatusScore);
}

public bool OnGameStatusScore(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int blueKill, int blueDeath, int bluePoint, int redKill, int redDeath, int redPoint)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameStatusScore;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, blueKill);
Nettention.Proud.Marshaler.Write(__msg, blueDeath);
Nettention.Proud.Marshaler.Write(__msg, bluePoint);
Nettention.Proud.Marshaler.Write(__msg, redKill);
Nettention.Proud.Marshaler.Write(__msg, redDeath);
Nettention.Proud.Marshaler.Write(__msg, redPoint);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameStatusScore, Common.OnGameStatusScore);
}
public bool OnGameStatusMessage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int type, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameStatusMessage;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, type);
		Nettention.Proud.Marshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameStatusMessage, Common.OnGameStatusMessage);
}

public bool OnGameStatusMessage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int type, String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameStatusMessage;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, type);
Nettention.Proud.Marshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameStatusMessage, Common.OnGameStatusMessage);
}
public bool OnGameEventHealth(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int num, int health)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventHealth;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, health);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventHealth, Common.OnGameEventHealth);
}

public bool OnGameEventHealth(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int num, int health)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventHealth;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, health);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventHealth, Common.OnGameEventHealth);
}
public bool OnGameEventDamage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int from, int to, int amount, String option)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventDamage;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, from);
		Nettention.Proud.Marshaler.Write(__msg, to);
		Nettention.Proud.Marshaler.Write(__msg, amount);
		Nettention.Proud.Marshaler.Write(__msg, option);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventDamage, Common.OnGameEventDamage);
}

public bool OnGameEventDamage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int from, int to, int amount, String option)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventDamage;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, from);
Nettention.Proud.Marshaler.Write(__msg, to);
Nettention.Proud.Marshaler.Write(__msg, amount);
Nettention.Proud.Marshaler.Write(__msg, option);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventDamage, Common.OnGameEventDamage);
}
public bool OnGameEventObject(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int num, int health)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventObject;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, health);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventObject, Common.OnGameEventObject);
}

public bool OnGameEventObject(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int num, int health)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventObject;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, health);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventObject, Common.OnGameEventObject);
}
public bool OnGameEventItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int type, int num, int action)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventItem;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, type);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, action);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventItem, Common.OnGameEventItem);
}

public bool OnGameEventItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int type, int num, int action)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventItem;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, type);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, action);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventItem, Common.OnGameEventItem);
}
public bool OnGameEventKill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int from, int to, String option)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventKill;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, from);
		Nettention.Proud.Marshaler.Write(__msg, to);
		Nettention.Proud.Marshaler.Write(__msg, option);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventKill, Common.OnGameEventKill);
}

public bool OnGameEventKill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int from, int to, String option)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventKill;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, from);
Nettention.Proud.Marshaler.Write(__msg, to);
Nettention.Proud.Marshaler.Write(__msg, option);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventKill, Common.OnGameEventKill);
}
public bool OnGameEventRespawn(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int num, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameEventRespawn;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, num);
		Nettention.Proud.Marshaler.Write(__msg, time);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameEventRespawn, Common.OnGameEventRespawn);
}

public bool OnGameEventRespawn(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int num, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameEventRespawn;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, num);
Nettention.Proud.Marshaler.Write(__msg, time);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameEventRespawn, Common.OnGameEventRespawn);
}
public bool OnGameResult(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameResult;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, data);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameResult, Common.OnGameResult);
}

public bool OnGameResult(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameResult;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, data);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameResult, Common.OnGameResult);
}
public bool OnGameUserMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameUserMove;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, data);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameUserMove, Common.OnGameUserMove);
}

public bool OnGameUserMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameUserMove;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, data);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameUserMove, Common.OnGameUserMove);
}
public bool OnGameUserSync(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OnGameUserSync;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, data);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OnGameUserSync, Common.OnGameUserSync);
}

public bool OnGameUserSync(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, String data)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OnGameUserSync;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, data);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OnGameUserSync, Common.OnGameUserSync);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_OnLoginResult="OnLoginResult";
public const string RmiName_OnRegisterResult="OnRegisterResult";
public const string RmiName_OnStatusResult="OnStatusResult";
public const string RmiName_OnSoloMatched="OnSoloMatched";
public const string RmiName_OnTeamMatched="OnTeamMatched";
public const string RmiName_OnGameInfo="OnGameInfo";
public const string RmiName_OnGameStatusCountdown="OnGameStatusCountdown";
public const string RmiName_OnGameStatusTime="OnGameStatusTime";
public const string RmiName_OnGameStatusReady="OnGameStatusReady";
public const string RmiName_OnGameStatusScore="OnGameStatusScore";
public const string RmiName_OnGameStatusMessage="OnGameStatusMessage";
public const string RmiName_OnGameEventHealth="OnGameEventHealth";
public const string RmiName_OnGameEventDamage="OnGameEventDamage";
public const string RmiName_OnGameEventObject="OnGameEventObject";
public const string RmiName_OnGameEventItem="OnGameEventItem";
public const string RmiName_OnGameEventKill="OnGameEventKill";
public const string RmiName_OnGameEventRespawn="OnGameEventRespawn";
public const string RmiName_OnGameResult="OnGameResult";
public const string RmiName_OnGameUserMove="OnGameUserMove";
public const string RmiName_OnGameUserSync="OnGameUserSync";
       
public const string RmiName_First = RmiName_OnLoginResult;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_OnLoginResult="";
public const string RmiName_OnRegisterResult="";
public const string RmiName_OnStatusResult="";
public const string RmiName_OnSoloMatched="";
public const string RmiName_OnTeamMatched="";
public const string RmiName_OnGameInfo="";
public const string RmiName_OnGameStatusCountdown="";
public const string RmiName_OnGameStatusTime="";
public const string RmiName_OnGameStatusReady="";
public const string RmiName_OnGameStatusScore="";
public const string RmiName_OnGameStatusMessage="";
public const string RmiName_OnGameEventHealth="";
public const string RmiName_OnGameEventDamage="";
public const string RmiName_OnGameEventObject="";
public const string RmiName_OnGameEventItem="";
public const string RmiName_OnGameEventKill="";
public const string RmiName_OnGameEventRespawn="";
public const string RmiName_OnGameResult="";
public const string RmiName_OnGameUserMove="";
public const string RmiName_OnGameUserSync="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

